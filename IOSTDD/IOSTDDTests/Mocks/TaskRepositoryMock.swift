// Auto-generated by Cuckoo â€” do not edit

import Cuckoo
@testable import IOSTDD
import Foundation

/// A mock for your `RepositoryProtocol`.
final class MockRepositoryProtocol: RepositoryProtocol, Cuckoo.ProtocolMock, @unchecked Sendable {
    // MARK: - Cuckoo boilerplate

    /// The mock manager that tracks calls & stubbing.
    let cuckoo_manager = Cuckoo.MockManager(hasParent: false)

    typealias MocksType = RepositoryProtocol
    typealias Stubbing = __StubbingProxy_RepositoryProtocol
    typealias Verification = __VerificationProxy_RepositoryProtocol

    // MARK: - Protocol methods

    func fetchTasks() async -> [TodoItem] {
        return await cuckoo_manager.call(
            "fetchTasks() async -> [TodoItem]",
            parameters: (),
            escapingParameters: (),
            superclassCall:
              Cuckoo.MockManager.crashOnProtocolSuperclassCall())
    }

    func addTask(_ task: TodoItem) async {
        return await cuckoo_manager.call(
            "addTask(_: TodoItem) async",
            parameters: (task),
            escapingParameters: (task),
            superclassCall:
              Cuckoo.MockManager.crashOnProtocolSuperclassCall())
    }

    func removeTask(by id: UUID) async {
        return await cuckoo_manager.call(
            "removeTask(by: UUID) async",
            parameters: (id),
            escapingParameters: (id),
            superclassCall:
              Cuckoo.MockManager.crashOnProtocolSuperclassCall())
    }

}
